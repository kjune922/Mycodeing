# Unit 25. 딕셔너리 응용하기
# 1. 딕셔너리에 키-값 쌍 추가하기
# setdefault: 키 - 값 쌍 추가
# update : 키의 값 수정, 키가 없으면 키 - 값 추가


# setdefault(키)는 딕셔너리에 키 - 값 쌍을 추가합니다. setdefault에 키만 지정하면 값에 None을 저장한다.
# 다음은 키 'e'를 추가하고 값에 None을 저장한다
x = {'a':10,'b':20,'c':30,'d':40}
x.setdefault('e')
print(x)

# setdefault(키, 기본값)처럼 키와 기본값을 지정하면 값에 기본값을 저장한 뒤 해당 값을 반환.
# 다음은 키 "f"를 추가하고 값에 100을 저장한 뒤 100을 반환

print(x.setdefault('f',100))
print(x)

# 이제는 수정해보자
# update(키 = 값)은 이름 그대로 딕셔너리의 키의 값을 수정한다, 예를 들어 딕셔너리에서 x = {"a"=10} 이라면
# x.update(a=90)과 같이 키에서 작은 따옴표 또는 큰따옴표를 빼고, 키 이름과 값을 지정한다

x = {'a':10,'b':20,'c':30,'d':40}
x.update(a=90)
print(x)

# 만약 여기서 딕셔너리에 키가 없으면 키 - 값 쌍을 추가하는 게 된다
x.update(e=50)
print(x) # 원래 딕셔너리에 e가 없었으므로 새로 e를 추가함

# update는 키 - 값 쌍 여러 개를 콤마로 구분해서 넣어주면 값을 한꺼번에 수정할 수 있다. 이때도 키가 있으면 해당 키의 값을 수정하고 없으면
# 키 - 값 쌍을 추가한다.
# 다음은 키 'a'의 값을 900으로 수정하고, 'f':60 추가

x.update(a=900,f=60)
print(x)

# update(키=값)은 키가 문자열일때만 쓸수있다
# 만약 키가 정수일때는, (숫자일때) update(딕셔너리자체)를 해서 값 수정가능
y = {1:'one',2:'two'}
y.update({1:'ONE',3:'three'})
print(y)

# 다른 방법으로 리스트와 튜플 이용하는 방법
# update(리스트) or update(튜플)은 리스트와 튜플로 값을 수정한다. 여기서 리스트는 [[키1, 값1], [키2, 값2]] 형식으로 키와 값을 리스트로 만들고
# 이 리스트를 다시 리스트 안에 넣어서 키 - 값 쌍을 나열해준다 (튜플도 같은 형식)

y.update([[3,'THREE']])
y.update([[2,'TWO'],[4,'FOUR']])
print(y)

# 특히 update(반복가능한객체)는 키 - 값 쌍으로 된 반복 가능한 객체로 값을 수정한다. 즉, 다음과 같이 키 리스트와 값 리스트를 묶은 zip객체로 값 수정
# zip([키1,키2],[값1,값2])
y.update(zip([1,2],['one','two']))
print(y)

# setdefault와 update의 차이
# setdefault는 키 - 값 쌍 추가만 할 수 있고, 이미 들어있는 키의 값은 수정할 수 있다. 하지만 update는 키-값 쌍 추가와 값 수정이 모두 가능
# 한마디로 setdefault는 추가만가능, 수정불가능
# update는 추가도되고 수정도 가능

# 딕셔너리에서 키 - 값 쌍 삭제하기
# x.pop()활용

x = {'a':10,'b':20,'c':30,'d':40}
x.pop('a')
print(x)

# del x[] 활용
x = {'a':10,'b':20,'c':30,'d':40}
del x['b']
print(x)

# 딕셔너리의 모든 키 - 값 쌍 삭제
# x.clear()활용

x = {'a':10,'b':20,'c':30}
x.clear()
print(x)

# 딕셔너리에서 키의 값을 가져오기
# x.get('키')
x = {'a':10,'b':20,'c':30,'d':40}
print(x.get('a'))

# 딕셔너리에서 키 - 값 쌍을 모두 가져오기
# 1. 키-값 둘다 싹다가져오기
# items()
# 2. 키만 싹다들고오기
# keys()
# 3. 값만 싹다들고오기
# values()

x = {'a':10,'b':20,'c':30,'d':40}
print(x.items())
print(x.keys())
print(x.values())

# 리스트와 튜플로 딕셔너리 만들어보기
# dict.fromkeys(키 리스트)는 키 리스트로 딕셔너리를 생성하고 값은 모두 None이 된다

keys = ['a','b','c','d','e']
x = dict.fromkeys(keys)
print(x)

# 100으로 값 채워보기
x = dict.fromkeys(keys,100)
print(x)
